# coding=utf-8
# 1、数值类型

# Python 3 的整型支持各种整数值，不管是小的整数值，还是大的整数值， python 都能轻松处理,不会发生溢出的问题。
# 不同于java语言， byte、short、 int、 long 等整型增 加了开发难度
a = 88888888888888888888888888888888888888888888888888888888
print(a)
print(type(a))

# Python 的整型支持 None 值(空值)，
b = None
print(b)


# Python 的整型数值有 4 种表示形式 。
# 〉十进制形式 : 最普通的整数就是十进制形式的整数 。
# 〉二进制形式:以Ob或OB开头的整数就是二进制形式的整数。
# 〉八进制形式 : 以 0O或 0o开头的整数就是八进制形式的整数(第二个字母是大写或小写的 0)。
# 〉十六进制形式 :以 0x 或 0x 开头 的整数就是十六进制形式的整数 ，其中 10~15 分别以 a-f(此处的 a~f不区分大小写)来表示。

i_10 = 1
i_2 = 0b1
i_8 = 0o1
i_16 = 0x1

# 为了提高数值(包括浮点型)的可读性，  Python 3.x 允许为数值(包括浮点型)增加下画线作为分隔符 。 这些下画线并不会影响数值本身 。
one_million = 1_000_000
print(one_million)


# 2、浮点型

# 浮点型数值用于保存带小数点的数值，Python的浮点数有两种表示形式。
# 1、十进制形式:这种形式就是平常简单的浮点数，例如 5.12、 512.0、 0.512。浮点数必须包含一个小数点，否则会被当成整数类型处理。
# 2、科学计数形式 : 例如 5.12e2 (即 5.12*10^2)、 5.12E2 (也是 5.12*10^2)。

# 注意：只有浮点型数值才可以使用科学计数形式表示。例如 51200 是一个整型值，但 512E2 则是浮点型值 。
# Python 不允许除以 0。不管是整型值还是浮点型值， Python 都不允许除以 0

float_1 = 5.12
float_2 = 512E2
int_3 = 51200
print(type(float_1), type(float_2), type(int_3))














