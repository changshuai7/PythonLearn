# coding=utf-8

# Python 是一门弱类型语言，弱类型包含两方面的含义:
# 1、所有的变量无须声明 即可使用，或者说对从未用过的变 量赋 值就是声明了应变量。
# 2、变量的数据类型可以随时改变，同一个变量可以一会儿是数值型，一会儿是字符串型。


# 1、注释

# Python 使用井号(#)表示单行注释的开始，跟在“#”号后面直到这行结束为止的代码都将 被解释器忽略 。单行注释就是在程序中注释 一行代码，在 Python 程序中将井号(#)放在需要注释 的内容之前就可以了 。
# 多行注释是指一次性将程序中的多行代码注释掉，在Python 程序中使用三个单引号或三个双引号将注释的内容括起来。

# 这是一个单行注释

'''
这是一个单引号的多行注释
这是一个单引号的多行注释
这是一个单引号的多行注释
'''
from os import sep

"""
这是一个双引号的多行注释
这是一个双引号的多行注释
这是一个双引号的多行注释
"""

# 2、变量
# Python 是弱类型语言，弱类型语言有两个 典型特征 。
# 〉变量无须声明即可直接赋值：对一个不存在的变量赋值就相当于定义了一个新变量。
# 〉变量的数据类型可以动态改变：同一个变量可以一会儿被赋值为整数值， 一会儿被赋值为字符串。

# 举例：

# >>> a = 5
# >>> print(a)
# 5
# >>> a = "hello world"
# >>> print(a)
# hello world
# >>> type(a)
# <type 'str'>

# 想看数据的的类型，可以使用 Python 的 type()函数。


# 3、print函数
# print (value, ... , sep=” , end=’ \ n’, file=sys.stdout , flush=False)
# value 参数可以接受任意多个变量或值
# ①
# print()函数默认[以空格]隔开多个变量，如果希望改变默认的分隔符，可通过 sep 参数进行设置

name = 'mty'
age = 18

print("age=", age, "name=", age)  # www mty com
print("age=", age, "name=", age, sep=".")

# ②
# 在默认情况下， print()函数输出之后总会换行，这是因为 print()函数的 end 参数的默认值是“\n”，
# 这个“\n”就代表了换行 。 如果希望 print()函数输出之后不会换行，则重设end 参数即可
print("age=", age, "name=", age, end="--")
print("age=", age, "name=", age, end="--")

# ③
# file 参数指定 print()函数的输出目标， file 参数的默认值为 sys.stdout，
# 该默认值代表了系统标 准输出，也就是屏幕，因此 print()函数默认输出到屏幕。
# 实际上，完全可以通过改变该参数让 print() 函数输出到特定文件中，例如如下代码 。
# open()函数用于打开一个文件
f = open('part02_1_file.txt', 'w')
print('hello world', file=f)

# ④
# print()函数的 flush 参数用于控制输出缓存
# 该参数一般保持为 False 即可， 这样可以获得较好的性能。
